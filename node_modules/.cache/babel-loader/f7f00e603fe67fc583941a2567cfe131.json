{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Desktop/stackex/stackex/src/Components/Question.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CurrentActionBar from \"./CurrentActionBar\";\nconst titleStyle = {\n  fontSize: \"180%\",\n  textAlign: \"center\"\n};\nconst cardTitle = {\n  width: \"90%\",\n  height: \"100px\",\n  backgroundColor: \"#eee\",\n  boxShadow: \"6px 6px #f2f5f3\",\n  margin: \"auto\",\n  verticalAlign: \"middle\"\n};\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: [],\n      answers: [],\n      question_id: props.match.params.question_id\n    };\n  }\n\n  componentDidMount() {\n    const questionAnsURL = \"https://api.stackexchange.com/2.2/questions/20721777/answers?order=desc&sort=activity&site=stackoverflow\";\n    const questionURL = \"https://api.stackexchange.com/2.2/questions/20721777?order=desc&sort=activity&site=stackoverflow\";\n    axios.get(\"\".concat(questionURL)).then(res => this.setState({\n      question: res.data.items[0]\n    })).then(axios.get(\"\".concat(questionAnsURL)).then(res => this.setState({\n      answers: res.data.items\n    })));\n  }\n\n  render() {\n    console.log(this.state.question.is_answered);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CurrentActionBar, {\n      currentAction: \"Question Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: cardTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: titleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.question.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Is Answered: \", this.state.question.is_answered)));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/home/lenovo/Desktop/stackex/stackex/src/Components/Question.js"],"names":["React","Component","axios","CurrentActionBar","titleStyle","fontSize","textAlign","cardTitle","width","height","backgroundColor","boxShadow","margin","verticalAlign","Question","constructor","props","state","question","answers","question_id","match","params","componentDidMount","questionAnsURL","questionURL","get","then","res","setState","data","items","render","console","log","is_answered","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,QAAQ,EAAE,MADO;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAAnB;AAIA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,KADS;AAEhBC,EAAAA,MAAM,EAAE,OAFQ;AAGhBC,EAAAA,eAAe,EAAE,MAHD;AAIhBC,EAAAA,SAAS,EAAE,iBAJK;AAKhBC,EAAAA,MAAM,EAAE,MALQ;AAMhBC,EAAAA,aAAa,EAAE;AANC,CAAlB;;AAQA,MAAMC,QAAN,SAAuBb,SAAvB,CAAiC;AAC/Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,WAAW,EAAEJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF;AAHrB,KAAb;AAKD;;AACDG,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,cAAc,GAClB,0GADF;AAEA,UAAMC,WAAW,GACf,kGADF;AAGAvB,IAAAA,KAAK,CACFwB,GADH,WACUD,WADV,GAEGE,IAFH,CAEQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEX,MAAAA,QAAQ,EAAEU,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAe,CAAf;AAAZ,KAAd,CAFf,EAGGJ,IAHH,CAIIzB,KAAK,CACFwB,GADH,WACUF,cADV,GAEGG,IAFH,CAEQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEV,MAAAA,OAAO,EAAES,GAAG,CAACE,IAAJ,CAASC;AAApB,KAAd,CAFf,CAJJ;AAQD;;AACDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,QAAX,CAAoBiB,WAAhC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,aAAa,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,KAAK,EAAE5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAEH,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,KAAKa,KAAL,CAAWC,QAAX,CAAoBkB,KAA3C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoB,KAAKnB,KAAL,CAAWC,QAAX,CAAoBiB,WAAxC,CAFF,CAJF,CADF;AAWD;;AArC8B;;AAwCjC,eAAerB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CurrentActionBar from \"./CurrentActionBar\";\nconst titleStyle = {\n  fontSize: \"180%\",\n  textAlign: \"center\"\n};\nconst cardTitle = {\n  width: \"90%\",\n  height: \"100px\",\n  backgroundColor: \"#eee\",\n  boxShadow: \"6px 6px #f2f5f3\",\n  margin: \"auto\",\n  verticalAlign: \"middle\"\n};\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: [],\n      answers: [],\n      question_id: props.match.params.question_id\n    };\n  }\n  componentDidMount() {\n    const questionAnsURL =\n      \"https://api.stackexchange.com/2.2/questions/20721777/answers?order=desc&sort=activity&site=stackoverflow\";\n    const questionURL =\n      \"https://api.stackexchange.com/2.2/questions/20721777?order=desc&sort=activity&site=stackoverflow\";\n\n    axios\n      .get(`${questionURL}`)\n      .then(res => this.setState({ question: res.data.items[0] }))\n      .then(\n        axios\n          .get(`${questionAnsURL}`)\n          .then(res => this.setState({ answers: res.data.items }))\n      );\n  }\n  render() {\n    console.log(this.state.question.is_answered);\n    return (\n      <div>\n        <div>\n          <CurrentActionBar currentAction=\"Question Title\" />\n        </div>\n        <div style={cardTitle}>\n          <p style={titleStyle}>{this.state.question.title}</p>\n          <span>Is Answered: {this.state.question.is_answered}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}